AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.7
    Environment:
      Variables:
        LOG_LEVEL: INFO
        TABLE: !Select [1, !Split [/, !GetAtt Table.Arn]]
    Timeout: 90

Resources:
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: localfunk
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "Key"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Key"
          KeyType: "HASH"

  GetItem:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app
      Handler: get_item.do
      Events:
        Api:
          Type: Api
          Properties:
            Method: Get
            Path: /{key}
      Policies:
        - AWSLambdaExecute
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt Table.Arn

  PutItem:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        import json
        import os

        import boto3

        SESSION = boto3.session.Session()
        TABLE = os.environ.get("TABLE")


        def handler(event, _context):
            key = event["pathParameters"].get("key")
            attrs = json.loads(event["body"])
            table = SESSION.resource("dynamodb").Table(TABLE)
            item = {"Key": key, **attrs}
            table.put_item(Item=item, ReturnValues="NONE")

            return {"statusCode": 200, "body": json.dumps({"item": item})}

      Handler: index.handler
      Events:
        Api:
          Type: Api
          Properties:
            Method: POST
            Path: /{key}
      Policies:
        - AWSLambdaExecute
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt Table.Arn
